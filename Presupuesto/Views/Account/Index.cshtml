@model IEnumerable<Account>
@{
    ViewData["Title"] = "Tipos de Cuentas";
}

<h1>Tipos de Cuentas</h1>
<h5>El tipo de cuenta se refiere a cómo podemos agrupar cuentas. Ejemplos: Préstamos, tarjetas de crédito, etc.</h5>
<a asp-action="Create" class="btn btn-primary mb-3">Crear Nuevo</a>

<table class="table">
	<thead>
		<tr>
			<th>Nombre</th>
			<th>Acciones</th>
		</tr>
	</thead>
	<tbody id="table-body">
		@foreach(Account account in Model)
		{
			<tr>
				<td>
					@account.name
				</td>
				<td>
					<input type="hidden" value="@account.id" class="ids" />
					<a class="btn btn-primary" asp-action="Edit" asp-route-id="@account.id">Editar</a>
					<a class="btn btn-danger" asp-action="Delete" asp-route-id="@account.id">Borrar</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@section Scripts {
	<script>
        const sortUrl = '@Url.Action("sort")';

		$(function() {
            $("#table-body").sortable({
                stop: async function(e, ui) {
                    await sortUpdate();
				}
			});

            async function sortUpdate() {
                const ids = getIdsFromElements();
                await sendToBackend(ids);

			};

			function getIdsFromElements() {
                const ids = $(".ids").map(function() { 
                    return $(this).val();
				}).get();

                return ids;
			}

			async function sendToBackend(ids) {
                var data = JSON.stringify(ids);

                await fetch(sortUrl, {
                    method: 'POST',
                    body: data,
                    headers: {
						'Content-Type': 'application/json'
					}
				})
			}
		})
	</script>
}

